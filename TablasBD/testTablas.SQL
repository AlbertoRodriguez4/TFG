--Tablas: 
CREATE TABLE Evento (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombreSala VARCHAR2(255),
    edadMinEvento NUMBER,
    edadMaxEvento NUMBER,
    localizacion VARCHAR2(255),
    tematicaEvento VARCHAR2(255),
    descripcionEnvento VARCHAR2(255),
    localizacionEvento VARCHAR2(255),
    cantidadAsistentes NUMBER,
    fechaEvento DATE,
    nombreEmpEvento VARCHAR2(255)
);

CREATE TABLE Juego (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(255),
    propiedadJuego VARCHAR2(255),
    descripcionJuego VARCHAR2(255),
    categoriaJuego VARCHAR2(255),
    normasJuego VARCHAR2(255)
);

CREATE TABLE Pregunta (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pregunta VARCHAR2(255)
);

CREATE TABLE Plan (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(255),
    precio NUMBER,
    descr VARCHAR2(255)
);

CREATE TABLE Sala (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(255),
    descripcion VARCHAR2(255),
    tematicaSala VARCHAR2(255),
    edadMinima NUMBER,
    edadMaxima NUMBER,
    localizacionSala VARCHAR2(255),
    numeroParticipantes VARCHAR2(255)
);

CREATE TABLE Usuario (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR2(255),
    email VARCHAR2(255),
    password VARCHAR2(255),
    plan VARCHAR2(255),
    descripcionPersonal VARCHAR2(255),
    imagen BLOB
);

CREATE TABLE sala_juego (
    sala_id NUMBER,
    juego_id NUMBER,
    CONSTRAINT fk_sala_juego_sala FOREIGN KEY (sala_id) REFERENCES Sala(id),
    CONSTRAINT fk_sala_juego_juego FOREIGN KEY (juego_id) REFERENCES Juego(id)
);

CREATE TABLE usuario_sala (
    usuario_id NUMBER,
    sala_id NUMBER,
    CONSTRAINT fk_usuario_sala_usuario FOREIGN KEY (usuario_id) REFERENCES Usuario(id),
    CONSTRAINT fk_usuario_sala_sala FOREIGN KEY (sala_id) REFERENCES Sala(id)
);

CREATE TABLE usuario_evento (
    usuario_id NUMBER,
    evento_id NUMBER,
    CONSTRAINT fk_usuario_evento_usuario FOREIGN KEY (usuario_id) REFERENCES Usuario(id),
    CONSTRAINT fk_usuario_evento_evento FOREIGN KEY (evento_id) REFERENCES Evento(id)
);

CREATE TABLE juego_pregunta (
    juego_id NUMBER,
    pregunta_id NUMBER,
    CONSTRAINT fk_juego_pregunta_juego FOREIGN KEY (juego_id) REFERENCES Juego(id),
    CONSTRAINT fk_juego_pregunta_pregunta FOREIGN KEY (pregunta_id) REFERENCES Pregunta(id)
);
-- Inserts para la tabla Evento
INSERT INTO Evento (nombreSala, edadMinEvento, edadMaxEvento, localizacion, tematicaEvento, descripcionEnvento, localizacionEvento, cantidadAsistentes, fechaEvento, nombreEmpEvento)
VALUES ('Sala de conferencias', 18, 60, 'Ciudad A', 'Conferencia sobre tecnología', 'Evento sobre las últimas tendencias tecnológicas', 'Centro de convenciones', 100, TO_DATE('2024-05-15', 'YYYY-MM-DD'), 'Empresa XYZ');

-- Inserts para la tabla Juego
INSERT INTO Juego (nombre, propiedadJuego, descripcionJuego, categoriaJuego, normasJuego)
VALUES ('Ajedrez', 'Tablero y piezas', 'Juego de estrategia', 'Tablero', 'Mover las piezas según las reglas');

-- Inserts para la tabla Pregunta
INSERT INTO Pregunta (pregunta)
VALUES ('¿Cuál es la capital de Francia?');

-- Inserts para la tabla Plan
INSERT INTO Plan (nombre, precio, descr)
VALUES ('Plan básico', 9.99, 'Plan de servicios básicos');

-- Inserts para la tabla Sala
INSERT INTO Sala (nombre, descripcion, tematicaSala, edadMinima, edadMaxima, localizacionSala, numeroParticipantes)
VALUES ('Sala de juegos', 'Sala equipada con consolas y juegos', 'Entretenimiento', 10, 99, 'Centro comercial', '10');

-- Inserts para la tabla Usuario
INSERT INTO Usuario (nome, email, password, plan, descripcionPersonal)
VALUES ('Usuario1', 'usuario1@example.com', 'contraseña123', 'Plan básico', 'Descripción personal del usuario 1');

-- Inserts para la tabla sala_juego
INSERT INTO sala_juego (sala_id, juego_id) VALUES (1, 1);

-- Inserts para la tabla usuario_sala
INSERT INTO usuario_sala (usuario_id, sala_id) VALUES (1, 1);

-- Inserts para la tabla usuario_evento
INSERT INTO usuario_evento (usuario_id, evento_id) VALUES (1, 1);

-- Inserts para la tabla juego_pregunta
INSERT INTO juego_pregunta (juego_id, pregunta_id) VALUES (1, 1);

--Sentencia para ver las preguntas: 
select pr.pregunta, ju.* from juego_pregunta sa INNER JOIN juego ju ON sa.juego_id = ju.id INNER JOIN pregunta pr ON sa.pregunta_id = pr.id WHERE 1 = 1;

--sentencia para ver los datos de los clientes y la sala en una sala
SELECT u.*, sa.*
FROM usuario_sala us
INNER JOIN sala sa ON us.sala_id = sa.id
INNER JOIN usuario u ON us.usuario_id = u.id
WHERE 1 = 1;

--sentencia para ver los datos de los clientes y el evento en un evento     
SELECT ue.*, e.*
FROM usuario_evento ue
INNER JOIN evento e ON ue.evento_id = e.id
INNER JOIN usuario u ON ue.usuario_id = u.id
WHERE 1 = 1;

--sentencia para ver cuantos clientes estan apuntados a un evento
select COUNT(*) from usuario_evento WHERE evento_id = 1;


